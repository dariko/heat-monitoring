grafana:
    vars:
        grafana_ldap_config: |
            [[servers]]
            host = "ldap01.services.it3.ns.farm ldap02.services.it3.ns.farm"
            port = 636
            use_ssl = true
            start_tls = false
            ssl_skip_verify = false
            root_ca_cert = "/etc/ldap.ca.crt"
            bind_dn = "uid=%s,ou=users,dc=ns,dc=farm"
            search_filter = "(uid=%s)"
            search_base_dns = ["dc=ns,dc=farm"]
            group_search_filter = "(&(objectClass=groupOfMembers)(member=uid=%s,ou=users,dc=ns,dc=farm))"
            group_search_base_dns = ["ou=groups,dc=ns,dc=farm"]
            [servers.attributes]
            name = "givenName"
            surname = "sn"
            username = "uid"
            #member_of = "memberOf"
            email =  "email"
            {% for grafana_ldap_admin_group in grafana_ldap_admin_groups|default([]) %}
            [[servers.group_mappings]]
            group_dn = "cn={{ grafana_ldap_admin_group }},ou=groups,dc=ns,dc=farm"
            org_role = "Admin"
            {% endfor %}
            {% for grafana_ldap_viewer_group in grafana_ldap_viewer_groups|default([]) %}
            [[servers.group_mappings]]
            group_dn = "cn={{ grafana_ldap_viewer_group }},ou=groups,dc=ns,dc=farm"
            org_role = "Viewer"
            {% endfor %}
            #[[servers.group_mappings]]
            #group_dn = "cn=,ou=groups,dc=ns,dc=farm"
            #org_role = "Viewer"

        grafana_provision_datasources: |
            apiVersion: 1
            datasources:
            {% for h in groups.prometheus %}
            -   name: "{{h}}"
                type: Prometheus
                access: proxy
                orgId: 1
                url: "https://{{h}}:9090"
                isDefault: {{ loop.first }}
                version: 1
                editable: false
            {% endfor %}
